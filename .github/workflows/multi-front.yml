name: CI Pipeline

on:
  push:
    branches:
      - dev

permissions:
  contents: write

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME2 }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD2 }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          #token: ${{ secrets.MY_GITHUB_TOKEN }}
          
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://npm.pkg.github.com'  # GitHub Packages를 사용하는 경우
          scope: '@repo'
          
      - name: Create .env files
        run: |
          # admin 앱의 .env 생성
          echo "${{ secrets.DG_ENV_ADMIN_FILE }}" > apps/admin/.env
          echo "${{ secrets.DG_ENV_WEB_FILE }}" > apps/web/.env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate Tags
        id: tags
        run: |
          TAG="front-${{ github.run_number }}"
          echo "image_tag=${TAG}" >> $GITHUB_OUTPUT
          echo "Generated tag: ${TAG}"

      - name: Log in to Amazon ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY

      - name: Build and Push Docker Image
        run: |
          docker build -t $ECR_REPOSITORY:${{ steps.tags.outputs.image_tag }} .
          docker tag $ECR_REPOSITORY:${{ steps.tags.outputs.image_tag }} $ECR_REPOSITORY:latest
          docker push $ECR_REPOSITORY:${{ steps.tags.outputs.image_tag }}
          docker push $ECR_REPOSITORY:latest
          echo "Pushed tags: latest, ${{ steps.tags.outputs.image_tag }}"

      - name: Trigger ToArgoCD Workflow
        if: success()
        env:
          REPO: "mu1titap/argocd-manifests"
          #PAT_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        run: |
          curl -X POST -H "Authorization: token $PAT_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/$REPO/dispatches \
          -d "{ \"event_type\": \"ci_completed\", \"client_payload\": { \"repository\": \"$ECR_REPOSITORY\", \"tag\": \"${{ steps.tags.outputs.image_tag }}\", \"service_name\": \"adaptors_fe_monorepo\" } }"
